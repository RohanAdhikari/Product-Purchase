# saved_predictions.py
from pathlib import Path
import pandas as pd
import numpy as np
from datetime import datetime

# Point to: PythonProject/datasets/saved_predictions.csv
PROJECT_ROOT = Path(__file__).resolve().parents[2]  # Go up two levels: etl → PRODUCT_APP → PythonProject
SAVED_PREDICTIONS_FILE = PROJECT_ROOT / "datasets" / "saved_predictions.csv"


def save_prediction_full(
    username,
    category,
    price_npr,
    rating,
    review_count,
    brand_reputation,
    discount_percent,
    availability,
    warranty_months,
    return_policy,
    prediction_result
):
    """
    Save full prediction input and result to CSV.

    Parameters:
    - All parameters are required as entered by user or generated by model.
    """
    # Ensure dataset directory exists
    SAVED_PREDICTIONS_FILE.parent.mkdir(parents=True, exist_ok=True)

    # Create a new entry
    new_entry = {
        "username": username or "Anonymous",
        "category": category,
        "price_npr": price_npr,
        "rating": rating,
        "review_count": review_count,
        "brand_reputation": brand_reputation,
        "discount_percent": discount_percent,
        "availability": availability,
        "warranty_months": warranty_months,
        "return_policy": return_policy,
        "log_price": np.log1p(price_npr),  # log(price + 1)
        "prediction_result": prediction_result,
        "timestamp": datetime.now().isoformat()
    }

    # Load existing or create new
    if SAVED_PREDICTIONS_FILE.exists():
        df = pd.read_csv(SAVED_PREDICTIONS_FILE)
    else:
        df = pd.DataFrame(columns=new_entry.keys())

    # Append and save
    df = pd.concat([df, pd.DataFrame([new_entry])], ignore_index=True)
    df.to_csv(SAVED_PREDICTIONS_FILE, index=False)

    print(f"[✔] Saved prediction for '{username}' at {new_entry['timestamp']}")
